<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppConstantsRecordCreated" xml:space="preserve">
    <value>App constants record created</value>
  </data>
  <data name="AppConstantsRecordDeleted" xml:space="preserve">
    <value>App constants record deleted</value>
  </data>
  <data name="AppConstantsRecordUpdated" xml:space="preserve">
    <value>App constants record updated</value>
  </data>
  <data name="CannotChangePassword" xml:space="preserve">
    <value>Cannot change password</value>
  </data>
  <data name="CannotCreateAppConstantsRecord" xml:space="preserve">
    <value>Cannot create app constants record</value>
  </data>
  <data name="CannotCreateLoggerConfig" xml:space="preserve">
    <value>Cannot create logger config record</value>
  </data>
  <data name="CannotCreateUser" xml:space="preserve">
    <value>Cannot create user</value>
  </data>
  <data name="CannotDeleteAppConstantsRecord" xml:space="preserve">
    <value>Cannot delete app constants record</value>
  </data>
  <data name="CannotDeleteLoggerConfig" xml:space="preserve">
    <value>Cannot delete logger config</value>
  </data>
  <data name="CannotDeleteUser" xml:space="preserve">
    <value>Cannot delete user</value>
  </data>
  <data name="CannotDisableUser" xml:space="preserve">
    <value>CannotDisableUser</value>
  </data>
  <data name="CannotEnableUser" xml:space="preserve">
    <value>Cannot enable user</value>
  </data>
  <data name="CannotFindAppConstantsRecord" xml:space="preserve">
    <value>Cannot find app constants record</value>
  </data>
  <data name="CannotFindLoggerConfig" xml:space="preserve">
    <value>Cannot find logger config record</value>
  </data>
  <data name="CannotFindUser" xml:space="preserve">
    <value>Cannot find user</value>
  </data>
  <data name="CannotGetAppConstantsRecordsList" xml:space="preserve">
    <value>Cannot get app constants records list</value>
  </data>
  <data name="CannotGetUsersList" xml:space="preserve">
    <value>Cannot get users list</value>
  </data>
  <data name="CannotInsertItem" xml:space="preserve">
    <value>Cannot insert item</value>
  </data>
  <data name="CannotUpdateAppConstantsRecord" xml:space="preserve">
    <value>Cannot update app constants record</value>
  </data>
  <data name="CannotUpdateLoggerConfig" xml:space="preserve">
    <value>Cannot update logger config</value>
  </data>
  <data name="CannotUpdateUser" xml:space="preserve">
    <value>Cannot update user</value>
  </data>
  <data name="EmptyAppConstantsRecordList" xml:space="preserve">
    <value>Empty app constants record list</value>
  </data>
  <data name="EmptyApplicationTitle" xml:space="preserve">
    <value>The application title should not be empty</value>
  </data>
  <data name="EmptyConnectionString" xml:space="preserve">
    <value>The connection string should not be empty</value>
  </data>
  <data name="EmptyLoggerType" xml:space="preserve">
    <value>The logger type should not be empty</value>
  </data>
  <data name="EmptyParentUid" xml:space="preserve">
    <value>The parent uid should not be empty</value>
  </data>
  <data name="EmptyUsersList" xml:space="preserve">
    <value>Empty users list</value>
  </data>
  <data name="LoggerConfigCreated" xml:space="preserve">
    <value>Logger config created</value>
  </data>
  <data name="LoggerConfigDeleted" xml:space="preserve">
    <value>Logger config deleted</value>
  </data>
  <data name="LoggerConfigUpdated" xml:space="preserve">
    <value>Logger config updated</value>
  </data>
  <data name="OnlyActiveAdministrator" xml:space="preserve">
    <value>The user is the only active administrator</value>
  </data>
  <data name="UserAlreadyExists" xml:space="preserve">
    <value>User already exists</value>
  </data>
  <data name="UserCreated" xml:space="preserve">
    <value>User created</value>
  </data>
  <data name="UserDeleted" xml:space="preserve">
    <value>User deleted</value>
  </data>
  <data name="UserDisabled" xml:space="preserve">
    <value>User disabled</value>
  </data>
  <data name="UserEnabled" xml:space="preserve">
    <value>User enabled</value>
  </data>
  <data name="UsersListRefreshed" xml:space="preserve">
    <value>Users list refreshed</value>
  </data>
  <data name="UserUpdated" xml:space="preserve">
    <value>User updated</value>
  </data>
  <data name="WrongDataBaseUidFormat" xml:space="preserve">
    <value>Invalid database uid format</value>
  </data>
  <data name="WrongPasswordFormat" xml:space="preserve">
    <value>Wrong password format</value>
  </data>
</root>